#!/usr/bin/env node

var reporter = 'dot';
process.argv.slice(2).forEach(function (arg) {
  switch (arg) {
    case '--xunit':
      reporter = 'xunit';
      break;
  }
});

requirejs = require("requirejs");
requirejs.config({
    nodeRequire: require,
    baseUrl: '.',
    paths: {
        // RequireJS Plugins
        cs: 'app/scripts/libs/requirejs/cs',
        text: 'app/scripts/libs/requirejs/text',
        requirejs: 'app/scripts/libs/requirejs/require',

        // 3rd party libs
        backbone: 'app/scripts/libs/backbone/0.9.1-amdjs/backbone',
        underscore: 'app/scripts/libs/underscore/1.3.1-amdjs/underscore',
        'jquerymobile':     'app/scripts/libs/jquery.mobile-1.0.1',

        // Open-Goal-Tracker stuff.
        app: 'app/scripts/',
        templates: 'app/scripts/templates'
    }
});

// Ensure document is defined for backbone, and that
// jquery accesses the *same* document (via window)
// without exposing window globally (which will put
// requirejs/cs into browser mode, trying to request dependencies
// via ajax.
//global.document = require('jsdom').jsdom();
//var window = document.createWindow();
//var jquery = require('jquery').create(window);
    
requirejs(['require', 'mocha', 'jquery'], function(require, mocha, jQuery){
    // The nodejs version of jquery is wrapped to create
    // its own window/document etc., so we need to ensure
    // that our global document (required for backbone)
    // is the same one which was created by jquery.
    // Time to switch to something simpler like
    // phantomjs for testing... without having to maintain
    // two separate envs, test setups.
    global.document = jQuery('html')[0]._ownerDocument;

    var suite = new mocha.Suite('', new mocha.Context);
    var ui = mocha.interfaces['tdd'];
    ui(suite);
    suite.emit('pre-require', root);

    // Could grab all .coffee files from test/ instead,
    // then also filter etc.
    require([
        'jquerymobile',
        'cs!test/unit/models/user_goal',
        'cs!test/unit/collections/user_goal',
        'cs!test/unit/views/user_goal_list',
        'cs!test/unit/views/user_goal_list_item',
        'cs!test/unit/views/my_goals',
        'cs!test/unit/routers/user_goal'
        ], function(){
        suite.emit('run');
        var runner = new mocha.Runner(suite);
        // When running with nodejs, we need to instantiate window
        // and navigator global objects.
        runner.ignoreLeaks = true;
        if (reporter === 'xunit'){
            var mocha_reporter = new mocha.reporters.XUnit(runner);
        } else {
            var mocha_reporter = new mocha.reporters.Dot(runner);
        }
        return runner.run();
    });
});
